"""Init

Revision ID: 4ce6da33ed75
Revises: 
Create Date: 2021-03-06 22:59:23.370917

"""
import fastapi_users
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '4ce6da33ed75'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', fastapi_users.db.sqlalchemy.GUID(), nullable=False),
    sa.Column('email', sa.String(length=320), nullable=False),
    sa.Column('hashed_password', sa.String(length=72), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('gmail', sa.String(length=320), nullable=False),
    sa.Column('name', sa.String(length=256), nullable=False),
    sa.Column('shortName', sa.String(length=64), nullable=False),
    sa.Column('authorName', sa.String(length=64), nullable=False),
    sa.Column('group', sa.Enum('ALC', 'ANAP', 'GTA', 'SAPOR', name='usergroup'), nullable=False),
    sa.Column('institution', sa.String(length=64), nullable=False),
    sa.Column('type', sa.Enum('MA', 'MC', 'MI', 'STUDENT', 'OTHER', name='usertype'), nullable=False),
    sa.Column('position', sa.Enum('ASSISTANT_PROFESSOR', 'ASSOCIATE_PROFESSOR', 'ADJUNCT_PROFESSOR', 'FULL_PROFESSOR', 'JUNIOR_RESEARCHER', 'POSTDOC_RESEARCHER', 'SCHOLARSHIP', name='userposition'), nullable=False),
    sa.Column('cienciaId', sa.String(length=64), nullable=True),
    sa.Column('orcidId', sa.String(length=64), nullable=True),
    sa.Column('scopusAuthorId', sa.String(length=64), nullable=True),
    sa.Column('researcherId', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_authorName'), 'user', ['authorName'], unique=False)
    op.create_index(op.f('ix_user_cienciaId'), 'user', ['cienciaId'], unique=False)
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_gmail'), 'user', ['gmail'], unique=True)
    op.create_index(op.f('ix_user_group'), 'user', ['group'], unique=False)
    op.create_index(op.f('ix_user_institution'), 'user', ['institution'], unique=False)
    op.create_index(op.f('ix_user_name'), 'user', ['name'], unique=False)
    op.create_index(op.f('ix_user_orcidId'), 'user', ['orcidId'], unique=False)
    op.create_index(op.f('ix_user_position'), 'user', ['position'], unique=False)
    op.create_index(op.f('ix_user_researcherId'), 'user', ['researcherId'], unique=False)
    op.create_index(op.f('ix_user_scopusAuthorId'), 'user', ['scopusAuthorId'], unique=False)
    op.create_index(op.f('ix_user_shortName'), 'user', ['shortName'], unique=False)
    op.create_index(op.f('ix_user_type'), 'user', ['type'], unique=False)
    op.create_table('export_schemas',
    sa.Column('id', fastapi_users.db.sqlalchemy.GUID(), nullable=False),
    sa.Column('userId', fastapi_users.db.sqlalchemy.GUID(), nullable=True),
    sa.Column('type', sa.String(length=64), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('template', sa.Text(), nullable=False),
    sa.Column('extension', sa.String(length=64), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['userId'], ['user.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_export_schemas_extension'), 'export_schemas', ['extension'], unique=False)
    op.create_index(op.f('ix_export_schemas_name'), 'export_schemas', ['name'], unique=False)
    op.create_index(op.f('ix_export_schemas_type'), 'export_schemas', ['type'], unique=False)
    op.create_table('form_event_organization',
    sa.Column('id', fastapi_users.db.sqlalchemy.GUID(), nullable=False),
    sa.Column('eventType', sa.String(length=64), nullable=False),
    sa.Column('involvementType', sa.String(length=64), nullable=False),
    sa.Column('regionType', sa.String(length=64), nullable=False),
    sa.Column('designation', sa.String(length=64), nullable=False),
    sa.Column('local', sa.String(length=64), nullable=False),
    sa.Column('dateStart', sa.Date(), nullable=False),
    sa.Column('dateFinish', sa.Date(), nullable=False),
    sa.Column('url', sa.Text(), nullable=False),
    sa.Column('observations', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('userId', fastapi_users.db.sqlalchemy.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['userId'], ['user.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_form_event_organization_dateFinish'), 'form_event_organization', ['dateFinish'], unique=False)
    op.create_index(op.f('ix_form_event_organization_dateStart'), 'form_event_organization', ['dateStart'], unique=False)
    op.create_index(op.f('ix_form_event_organization_designation'), 'form_event_organization', ['designation'], unique=False)
    op.create_index(op.f('ix_form_event_organization_eventType'), 'form_event_organization', ['eventType'], unique=False)
    op.create_index(op.f('ix_form_event_organization_involvementType'), 'form_event_organization', ['involvementType'], unique=False)
    op.create_index(op.f('ix_form_event_organization_local'), 'form_event_organization', ['local'], unique=False)
    op.create_index(op.f('ix_form_event_organization_regionType'), 'form_event_organization', ['regionType'], unique=False)
    op.create_table('form_event_participation',
    sa.Column('id', fastapi_users.db.sqlalchemy.GUID(), nullable=False),
    sa.Column('eventType', sa.String(length=64), nullable=False),
    sa.Column('participationType', sa.String(length=64), nullable=False),
    sa.Column('title', sa.String(length=64), nullable=True),
    sa.Column('event', sa.String(length=64), nullable=False),
    sa.Column('local', sa.String(length=64), nullable=False),
    sa.Column('dateStart', sa.Date(), nullable=False),
    sa.Column('dateFinish', sa.Date(), nullable=False),
    sa.Column('observations', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('userId', fastapi_users.db.sqlalchemy.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['userId'], ['user.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_form_event_participation_dateFinish'), 'form_event_participation', ['dateFinish'], unique=False)
    op.create_index(op.f('ix_form_event_participation_dateStart'), 'form_event_participation', ['dateStart'], unique=False)
    op.create_index(op.f('ix_form_event_participation_event'), 'form_event_participation', ['event'], unique=False)
    op.create_index(op.f('ix_form_event_participation_eventType'), 'form_event_participation', ['eventType'], unique=False)
    op.create_index(op.f('ix_form_event_participation_local'), 'form_event_participation', ['local'], unique=False)
    op.create_index(op.f('ix_form_event_participation_participationType'), 'form_event_participation', ['participationType'], unique=False)
    op.create_index(op.f('ix_form_event_participation_title'), 'form_event_participation', ['title'], unique=False)
    op.create_table('form_extension',
    sa.Column('id', fastapi_users.db.sqlalchemy.GUID(), nullable=False),
    sa.Column('type', sa.String(length=64), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('dateStart', sa.Date(), nullable=False),
    sa.Column('dateFinish', sa.Date(), nullable=False),
    sa.Column('observations', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('userId', fastapi_users.db.sqlalchemy.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['userId'], ['user.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_form_extension_dateFinish'), 'form_extension', ['dateFinish'], unique=False)
    op.create_index(op.f('ix_form_extension_dateStart'), 'form_extension', ['dateStart'], unique=False)
    op.create_index(op.f('ix_form_extension_type'), 'form_extension', ['type'], unique=False)
    op.create_table('form_jury_scientific_committee',
    sa.Column('id', fastapi_users.db.sqlalchemy.GUID(), nullable=False),
    sa.Column('memberId', fastapi_users.db.sqlalchemy.GUID(), nullable=True),
    sa.Column('type', sa.String(length=64), nullable=False),
    sa.Column('description', sa.String(length=64), nullable=False),
    sa.Column('dateStart', sa.Date(), nullable=False),
    sa.Column('dateFinish', sa.Date(), nullable=False),
    sa.Column('observations', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('userId', fastapi_users.db.sqlalchemy.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['memberId'], ['user.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['userId'], ['user.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_form_jury_scientific_committee_dateFinish'), 'form_jury_scientific_committee', ['dateFinish'], unique=False)
    op.create_index(op.f('ix_form_jury_scientific_committee_dateStart'), 'form_jury_scientific_committee', ['dateStart'], unique=False)
    op.create_index(op.f('ix_form_jury_scientific_committee_description'), 'form_jury_scientific_committee', ['description'], unique=False)
    op.create_index(op.f('ix_form_jury_scientific_committee_type'), 'form_jury_scientific_committee', ['type'], unique=False)
    op.create_table('form_referring_editorial_act',
    sa.Column('id', fastapi_users.db.sqlalchemy.GUID(), nullable=False),
    sa.Column('memberId', fastapi_users.db.sqlalchemy.GUID(), nullable=True),
    sa.Column('type', sa.String(length=64), nullable=False),
    sa.Column('regionType', sa.String(length=64), nullable=False),
    sa.Column('publicationType', sa.String(length=64), nullable=False),
    sa.Column('publication', sa.String(length=256), nullable=False),
    sa.Column('reviews', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('observations', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('userId', fastapi_users.db.sqlalchemy.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['memberId'], ['user.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['userId'], ['user.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_form_referring_editorial_act_publication'), 'form_referring_editorial_act', ['publication'], unique=False)
    op.create_index(op.f('ix_form_referring_editorial_act_publicationType'), 'form_referring_editorial_act', ['publicationType'], unique=False)
    op.create_index(op.f('ix_form_referring_editorial_act_regionType'), 'form_referring_editorial_act', ['regionType'], unique=False)
    op.create_index(op.f('ix_form_referring_editorial_act_reviews'), 'form_referring_editorial_act', ['reviews'], unique=False)
    op.create_index(op.f('ix_form_referring_editorial_act_type'), 'form_referring_editorial_act', ['type'], unique=False)
    op.create_index(op.f('ix_form_referring_editorial_act_year'), 'form_referring_editorial_act', ['year'], unique=False)
    op.create_table('form_supervision',
    sa.Column('id', fastapi_users.db.sqlalchemy.GUID(), nullable=False),
    sa.Column('student', sa.String(length=64), nullable=False),
    sa.Column('studentCountry', sa.String(length=64), nullable=False),
    sa.Column('type', sa.String(length=64), nullable=False),
    sa.Column('situation', sa.String(length=64), nullable=False),
    sa.Column('title', sa.String(length=128), nullable=False),
    sa.Column('institution', sa.String(length=64), nullable=False),
    sa.Column('course', sa.String(length=64), nullable=False),
    sa.Column('dateStart', sa.Date(), nullable=False),
    sa.Column('dateFinish', sa.Date(), nullable=False),
    sa.Column('observations', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('userId', fastapi_users.db.sqlalchemy.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['userId'], ['user.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_form_supervision_course'), 'form_supervision', ['course'], unique=False)
    op.create_index(op.f('ix_form_supervision_dateFinish'), 'form_supervision', ['dateFinish'], unique=False)
    op.create_index(op.f('ix_form_supervision_dateStart'), 'form_supervision', ['dateStart'], unique=False)
    op.create_index(op.f('ix_form_supervision_institution'), 'form_supervision', ['institution'], unique=False)
    op.create_index(op.f('ix_form_supervision_situation'), 'form_supervision', ['situation'], unique=False)
    op.create_index(op.f('ix_form_supervision_student'), 'form_supervision', ['student'], unique=False)
    op.create_index(op.f('ix_form_supervision_studentCountry'), 'form_supervision', ['studentCountry'], unique=False)
    op.create_index(op.f('ix_form_supervision_title'), 'form_supervision', ['title'], unique=False)
    op.create_index(op.f('ix_form_supervision_type'), 'form_supervision', ['type'], unique=False)
    op.create_table('form_event_organization_members',
    sa.Column('member_id', fastapi_users.db.sqlalchemy.GUID(), nullable=False),
    sa.Column('form_id', fastapi_users.db.sqlalchemy.GUID(), nullable=False),
    sa.ForeignKeyConstraint(['form_id'], ['form_event_organization.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['member_id'], ['user.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('member_id', 'form_id')
    )
    op.create_table('form_extension_members',
    sa.Column('member_id', fastapi_users.db.sqlalchemy.GUID(), nullable=False),
    sa.Column('form_id', fastapi_users.db.sqlalchemy.GUID(), nullable=False),
    sa.ForeignKeyConstraint(['form_id'], ['form_extension.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['member_id'], ['user.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('member_id', 'form_id')
    )
    op.create_table('form_supervision_supervisors',
    sa.Column('supervisor_id', fastapi_users.db.sqlalchemy.GUID(), nullable=False),
    sa.Column('form_id', fastapi_users.db.sqlalchemy.GUID(), nullable=False),
    sa.ForeignKeyConstraint(['form_id'], ['form_supervision.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['supervisor_id'], ['user.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('supervisor_id', 'form_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('form_supervision_supervisors')
    op.drop_table('form_extension_members')
    op.drop_table('form_event_organization_members')
    op.drop_index(op.f('ix_form_supervision_type'), table_name='form_supervision')
    op.drop_index(op.f('ix_form_supervision_title'), table_name='form_supervision')
    op.drop_index(op.f('ix_form_supervision_studentCountry'), table_name='form_supervision')
    op.drop_index(op.f('ix_form_supervision_student'), table_name='form_supervision')
    op.drop_index(op.f('ix_form_supervision_situation'), table_name='form_supervision')
    op.drop_index(op.f('ix_form_supervision_institution'), table_name='form_supervision')
    op.drop_index(op.f('ix_form_supervision_dateStart'), table_name='form_supervision')
    op.drop_index(op.f('ix_form_supervision_dateFinish'), table_name='form_supervision')
    op.drop_index(op.f('ix_form_supervision_course'), table_name='form_supervision')
    op.drop_table('form_supervision')
    op.drop_index(op.f('ix_form_referring_editorial_act_year'), table_name='form_referring_editorial_act')
    op.drop_index(op.f('ix_form_referring_editorial_act_type'), table_name='form_referring_editorial_act')
    op.drop_index(op.f('ix_form_referring_editorial_act_reviews'), table_name='form_referring_editorial_act')
    op.drop_index(op.f('ix_form_referring_editorial_act_regionType'), table_name='form_referring_editorial_act')
    op.drop_index(op.f('ix_form_referring_editorial_act_publicationType'), table_name='form_referring_editorial_act')
    op.drop_index(op.f('ix_form_referring_editorial_act_publication'), table_name='form_referring_editorial_act')
    op.drop_table('form_referring_editorial_act')
    op.drop_index(op.f('ix_form_jury_scientific_committee_type'), table_name='form_jury_scientific_committee')
    op.drop_index(op.f('ix_form_jury_scientific_committee_description'), table_name='form_jury_scientific_committee')
    op.drop_index(op.f('ix_form_jury_scientific_committee_dateStart'), table_name='form_jury_scientific_committee')
    op.drop_index(op.f('ix_form_jury_scientific_committee_dateFinish'), table_name='form_jury_scientific_committee')
    op.drop_table('form_jury_scientific_committee')
    op.drop_index(op.f('ix_form_extension_type'), table_name='form_extension')
    op.drop_index(op.f('ix_form_extension_dateStart'), table_name='form_extension')
    op.drop_index(op.f('ix_form_extension_dateFinish'), table_name='form_extension')
    op.drop_table('form_extension')
    op.drop_index(op.f('ix_form_event_participation_title'), table_name='form_event_participation')
    op.drop_index(op.f('ix_form_event_participation_participationType'), table_name='form_event_participation')
    op.drop_index(op.f('ix_form_event_participation_local'), table_name='form_event_participation')
    op.drop_index(op.f('ix_form_event_participation_eventType'), table_name='form_event_participation')
    op.drop_index(op.f('ix_form_event_participation_event'), table_name='form_event_participation')
    op.drop_index(op.f('ix_form_event_participation_dateStart'), table_name='form_event_participation')
    op.drop_index(op.f('ix_form_event_participation_dateFinish'), table_name='form_event_participation')
    op.drop_table('form_event_participation')
    op.drop_index(op.f('ix_form_event_organization_regionType'), table_name='form_event_organization')
    op.drop_index(op.f('ix_form_event_organization_local'), table_name='form_event_organization')
    op.drop_index(op.f('ix_form_event_organization_involvementType'), table_name='form_event_organization')
    op.drop_index(op.f('ix_form_event_organization_eventType'), table_name='form_event_organization')
    op.drop_index(op.f('ix_form_event_organization_designation'), table_name='form_event_organization')
    op.drop_index(op.f('ix_form_event_organization_dateStart'), table_name='form_event_organization')
    op.drop_index(op.f('ix_form_event_organization_dateFinish'), table_name='form_event_organization')
    op.drop_table('form_event_organization')
    op.drop_index(op.f('ix_export_schemas_type'), table_name='export_schemas')
    op.drop_index(op.f('ix_export_schemas_name'), table_name='export_schemas')
    op.drop_index(op.f('ix_export_schemas_extension'), table_name='export_schemas')
    op.drop_table('export_schemas')
    op.drop_index(op.f('ix_user_type'), table_name='user')
    op.drop_index(op.f('ix_user_shortName'), table_name='user')
    op.drop_index(op.f('ix_user_scopusAuthorId'), table_name='user')
    op.drop_index(op.f('ix_user_researcherId'), table_name='user')
    op.drop_index(op.f('ix_user_position'), table_name='user')
    op.drop_index(op.f('ix_user_orcidId'), table_name='user')
    op.drop_index(op.f('ix_user_name'), table_name='user')
    op.drop_index(op.f('ix_user_institution'), table_name='user')
    op.drop_index(op.f('ix_user_group'), table_name='user')
    op.drop_index(op.f('ix_user_gmail'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_index(op.f('ix_user_cienciaId'), table_name='user')
    op.drop_index(op.f('ix_user_authorName'), table_name='user')
    op.drop_table('user')
    # ### end Alembic commands ###
